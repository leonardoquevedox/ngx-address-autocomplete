{"version":3,"file":"ngx-address-autocomplete.js.map","sources":["ng://ngx-address-autocomplete/lib/ngx-address-autocomplete.directive.ts","ng://ngx-address-autocomplete/lib/ngx-address-autocomplete.module.ts"],"sourcesContent":["/**\n * @license MIT\n * @version 1.1.0\n * @author Leonardo Quevedo\n * @description Address autocomplete directive.\n */\n\nimport { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\ndeclare var google;\n\n@Directive({\n  selector: \"[ngx-address-autocomplete]\"\n})\nexport class NgxAddressAutocompleteDirective {\n  MAX_RADIUS = 100000;\n  ELEMENT_INITIALIZATION_DELAY = 2000;\n\n  @Input(\"ngx-address-autocomplete\") uniqueId: string;\n  @Output() onSelect: EventEmitter<any> = new EventEmitter();\n  @Input(\"options\") options: any = {};\n\n  DEFAULT_KEY_MAPPING = {\n    formatted_address: \"vicinity\",\n    street: \"street\",\n    street_number: \"number\",\n    sublocality_level_1: \"neighbourhood\",\n    administrative_area_level_2: \"city\",\n    postal_code: \"postalCode\",\n    administrative_area_level_1: \"state\",\n    country: \"country\"\n  };\n\n  constructor() {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      let inputId = this.uniqueId;\n      let div = document.querySelector(`[ngx-address-autocomplete=${inputId}]`);\n      if (!div)\n        console.warn(\n          NgxAddressAutocompleteDirective.name +\n            \": Whoops! We were unable to find any divs with the id provided :(\"\n        );\n      let divIsAnInput = div && div.nodeName == \"INPUT\";\n      let input: any = divIsAnInput\n        ? div\n        : document.querySelector(`[ngx-address-autocomplete=${inputId}] input`);\n      if (!input)\n        console.warn(\n          NgxAddressAutocompleteDirective.name +\n            \": Whoops! Be sure to add the directive only to inputs or divs with input children )\"\n        );\n      this.generateAutocompleteInput(input);\n    }, this.ELEMENT_INITIALIZATION_DELAY);\n  }\n\n  async generateAutocompleteInput(input) {\n    let coordinates;\n    try {\n      coordinates = await this.getUserLocation();\n    } catch (e) {\n      console.warn(e);\n    } finally {\n      if (coordinates) {\n        /* In case the coordinates were obtained successfully */\n        let autocomplete = new google.maps.places.Autocomplete(\n          input,\n          this.options\n        );\n        let circle = new google.maps.Circle({\n          center: <google.maps.LatLng>coordinates,\n          radius: this.options.radius || this.MAX_RADIUS\n        });\n        autocomplete.setBounds(circle.getBounds());\n        autocomplete.addListener(\"place_changed\", () => {\n          let place = autocomplete.getPlace();\n          let address = this.parseAddress(place);\n          this.onSelect.emit({ place: place, address: address });\n        });\n      }\n    }\n  }\n\n  async getUserLocation() {\n    return new Promise((resolve, reject) => {\n      window.navigator.geolocation.getCurrentPosition(\n        location => {\n          resolve(this.getLatLngFrom(location));\n        },\n        err => {\n          reject(err);\n        }\n      );\n    });\n  }\n\n  getLatLngFrom(location) {\n    let coordinates =\n      typeof google !== \"undefined\"\n        ? new google.maps.LatLng(\n            location.coords.latitude,\n            location.coords.longitude\n          )\n        : this.createFallbackCoordinates(location);\n    return coordinates;\n  }\n\n  createFallbackCoordinates(nativeCoordinates) {\n    nativeCoordinates.lat = function() {\n      return this.coords.latitude;\n    };\n    nativeCoordinates.lng = function() {\n      return this.coords.longitude;\n    };\n    return nativeCoordinates;\n  }\n\n  getAddressElement(\n    gmapsAddressComponent: Array<any>,\n    addressComponentCode: string\n  ) {\n    let value;\n    gmapsAddressComponent.map(element => {\n      if (\n        element.types &&\n        element.types.indexOf &&\n        element.types.indexOf(addressComponentCode) > -1\n      )\n        value = element.short_name || element.long_name;\n    });\n    return value;\n  }\n\n  getPlaceLatLng(place: google.maps.places.PlaceResult) {\n    return {\n      lng: place.geometry.location.lng(),\n      lat: place.geometry.location.lat()\n    };\n  }\n\n  getAddressFromPlace(place: google.maps.places.PlaceResult, keyMapping?: any) {\n    if (!place || !place.geometry) {\n      console.warn(\n        NgxAddressAutocompleteDirective.name +\n          \": Whoops! It looks like the geometry property is missing from this place.\"\n      );\n      return false;\n    }\n    let address: any = {};\n    let addressKeys = keyMapping || this.DEFAULT_KEY_MAPPING;\n    for (let i = 0; i < place.address_components.length; i++) {\n      let infoType = place.address_components[i].types[0];\n      let infoIsRequired = addressKeys[infoType];\n      if (infoIsRequired) {\n        let infoValue = place.address_components[i][\"long_name\"];\n        address[addressKeys[infoType]] = infoValue;\n      }\n    }\n    address.vicinity = place.formatted_address;\n    return address;\n  }\n\n  parseAddress(place: google.maps.places.PlaceResult) {\n    if (!place) return {};\n    let rawAddress = place.address_components;\n    let address: any = {};\n    /* Parses address */\n    address.streetNumber = this.getAddressElement(rawAddress, \"street_number\");\n    address.location = this.getPlaceLatLng(place);\n    address.street = this.getAddressElement(rawAddress, \"route\");\n    address.number = this.getAddressElement(rawAddress, \"street_number\");\n    address.neighbourhood = this.getAddressElement(rawAddress, \"sublocality\");\n    address.city = this.getAddressElement(\n      rawAddress,\n      \"administrative_area_level_2\"\n    );\n    address.state = this.getAddressElement(\n      rawAddress,\n      \"administrative_area_level_1\"\n    );\n    address.country = this.getAddressElement(rawAddress, \"country\");\n    address.postalCode = this.getAddressElement(rawAddress, \"postal_code\");\n    const streetAlreadyHasNumber =\n      address.street && !isNaN(parseInt(address.street.split(\",\")[1]));\n    if (address.streetNumber && !streetAlreadyHasNumber)\n      address.street = address.street + \", \" + address.streetNumber;\n    return address;\n  }\n}\n","/**\n * @license MIT\n * @author Leonardo Quevedo\n * @description Directive module.\n */\n\nimport { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { NgxAddressAutocompleteDirective } from './ngx-address-autocomplete.directive'\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [NgxAddressAutocompleteDirective],\n    exports: [NgxAddressAutocompleteDirective]\n})\nexport class NgxAddressAutocompleteModule { }\n"],"names":[],"mappings":";;;;;;;;;IAiCE;QAlBA,eAAU,GAAG,MAAM,CAAC;QACpB,iCAA4B,GAAG,IAAI,CAAC;QAG1B,aAAQ,GAAsB,IAAI,YAAY,EAAE,CAAC;QACzC,YAAO,GAAQ,EAAE,CAAC;QAEpC,wBAAmB,GAAG;YACpB,iBAAiB,EAAE,UAAU;YAC7B,MAAM,EAAE,QAAQ;YAChB,aAAa,EAAE,QAAQ;YACvB,mBAAmB,EAAE,eAAe;YACpC,2BAA2B,EAAE,MAAM;YACnC,WAAW,EAAE,YAAY;YACzB,2BAA2B,EAAE,OAAO;YACpC,OAAO,EAAE,SAAS;SACnB,CAAC;KAEc;;;;IAEhB,QAAQ;QACN,UAAU;;;QAAC;;gBACL,OAAO,GAAG,IAAI,CAAC,QAAQ;;gBACvB,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,6BAA6B,OAAO,GAAG,CAAC;YACzE,IAAI,CAAC,GAAG;gBACN,OAAO,CAAC,IAAI,CACV,+BAA+B,CAAC,IAAI;oBAClC,mEAAmE,CACtE,CAAC;;gBACA,YAAY,GAAG,GAAG,IAAI,GAAG,CAAC,QAAQ,IAAI,OAAO;;gBAC7C,KAAK,GAAQ,YAAY;kBACzB,GAAG;kBACH,QAAQ,CAAC,aAAa,CAAC,6BAA6B,OAAO,SAAS,CAAC;YACzE,IAAI,CAAC,KAAK;gBACR,OAAO,CAAC,IAAI,CACV,+BAA+B,CAAC,IAAI;oBAClC,qFAAqF,CACxF,CAAC;YACJ,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;SACvC,GAAE,IAAI,CAAC,4BAA4B,CAAC,CAAC;KACvC;;;;;IAEK,yBAAyB,CAAC,KAAK;;;gBAC/B,WAAW;YACf,IAAI;gBACF,WAAW,GAAG,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;aAC5C;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACjB;oBAAS;gBACR,IAAI,WAAW,EAAE;;;wBAEX,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CACpD,KAAK,EACL,IAAI,CAAC,OAAO,CACb;;wBACG,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;wBAClC,MAAM,qBAAsB,WAAW,EAAA;wBACvC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU;qBAC/C,CAAC;oBACF,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;oBAC3C,YAAY,CAAC,WAAW,CAAC,eAAe;;;oBAAE;;4BACpC,KAAK,GAAG,YAAY,CAAC,QAAQ,EAAE;;4BAC/B,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;wBACtC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;qBACxD,EAAC,CAAC;iBACJ;aACF;SACF;KAAA;;;;IAEK,eAAe;;YACnB,OAAO,IAAI,OAAO;;;;;YAAC,CAAC,OAAO,EAAE,MAAM;gBACjC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB;;;;gBAC7C,QAAQ;oBACN,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;iBACvC;;;;gBACD,GAAG;oBACD,MAAM,CAAC,GAAG,CAAC,CAAC;iBACb,EACF,CAAC;aACH,EAAC,CAAC;SACJ;KAAA;;;;;IAED,aAAa,CAAC,QAAQ;;YAChB,WAAW,GACb,OAAO,MAAM,KAAK,WAAW;cACzB,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CACpB,QAAQ,CAAC,MAAM,CAAC,QAAQ,EACxB,QAAQ,CAAC,MAAM,CAAC,SAAS,CAC1B;cACD,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC;QAC9C,OAAO,WAAW,CAAC;KACpB;;;;;IAED,yBAAyB,CAAC,iBAAiB;QACzC,iBAAiB,CAAC,GAAG;;;QAAG;YACtB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;SAC7B,CAAA,CAAC;QACF,iBAAiB,CAAC,GAAG;;;QAAG;YACtB,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;SAC9B,CAAA,CAAC;QACF,OAAO,iBAAiB,CAAC;KAC1B;;;;;;IAED,iBAAiB,CACf,qBAAiC,EACjC,oBAA4B;;YAExB,KAAK;QACT,qBAAqB,CAAC,GAAG;;;;QAAC,OAAO;YAC/B,IACE,OAAO,CAAC,KAAK;gBACb,OAAO,CAAC,KAAK,CAAC,OAAO;gBACrB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;gBAEhD,KAAK,GAAG,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,SAAS,CAAC;SACnD,EAAC,CAAC;QACH,OAAO,KAAK,CAAC;KACd;;;;;IAED,cAAc,CAAC,KAAqC;QAClD,OAAO;YACL,GAAG,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE;YAClC,GAAG,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE;SACnC,CAAC;KACH;;;;;;IAED,mBAAmB,CAAC,KAAqC,EAAE,UAAgB;QACzE,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YAC7B,OAAO,CAAC,IAAI,CACV,+BAA+B,CAAC,IAAI;gBAClC,2EAA2E,CAC9E,CAAC;YACF,OAAO,KAAK,CAAC;SACd;;YACG,OAAO,GAAQ,EAAE;;YACjB,WAAW,GAAG,UAAU,IAAI,IAAI,CAAC,mBAAmB;QACxD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;gBACpD,QAAQ,GAAG,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;;gBAC/C,cAAc,GAAG,WAAW,CAAC,QAAQ,CAAC;YAC1C,IAAI,cAAc,EAAE;;oBACd,SAAS,GAAG,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;gBACxD,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC;aAC5C;SACF;QACD,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC,iBAAiB,CAAC;QAC3C,OAAO,OAAO,CAAC;KAChB;;;;;IAED,YAAY,CAAC,KAAqC;QAChD,IAAI,CAAC,KAAK;YAAE,OAAO,EAAE,CAAC;;YAClB,UAAU,GAAG,KAAK,CAAC,kBAAkB;;YACrC,OAAO,GAAQ,EAAE;;QAErB,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;QAC3E,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAC9C,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAC7D,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;QACrE,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QAC1E,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CACnC,UAAU,EACV,6BAA6B,CAC9B,CAAC;QACF,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CACpC,UAAU,EACV,6BAA6B,CAC9B,CAAC;QACF,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAChE,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;;cACjE,sBAAsB,GAC1B,OAAO,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,IAAI,OAAO,CAAC,YAAY,IAAI,CAAC,sBAAsB;YACjD,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,GAAG,OAAO,CAAC,YAAY,CAAC;QAChE,OAAO,OAAO,CAAC;KAChB;;;YAjLF,SAAS,SAAC;gBACT,QAAQ,EAAE,4BAA4B;aACvC;;;;uBAKE,KAAK,SAAC,0BAA0B;uBAChC,MAAM;sBACN,KAAK,SAAC,SAAS;;;;;;;;;;YCVjB,QAAQ,SAAC;gBACN,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,+BAA+B,CAAC;gBAC/C,OAAO,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;;"}
