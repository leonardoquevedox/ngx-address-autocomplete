!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common"),require("@angular/core")):"function"==typeof define&&define.amd?define("ngx-dynamic-mask",["exports","@angular/common","@angular/core"],t):t(e["ngx-dynamic-mask"]={},e.ng.common,e.ng.core)}(this,function(e,t,n){"use strict";function o(t,i,a,u){return new(a||(a=Promise))(function(e,n){function o(e){try{s(u.next(e))}catch(t){n(t)}}function r(e){try{s(u["throw"](e))}catch(t){n(t)}}function s(t){t.done?e(t.value):new a(function(e){e(t.value)}).then(o,r)}s((u=u.apply(t,i||[])).next())})}function u(o,r){var s,i,a,e,u={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return e={next:t(0),"throw":t(1),"return":t(2)},"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function t(t){return function(e){return function n(e){if(s)throw new TypeError("Generator is already executing.");for(;u;)try{if(s=1,i&&(a=2&e[0]?i["return"]:e[0]?i["throw"]||((a=i["return"])&&a.call(i),0):i.next)&&!(a=a.call(i,e[1])).done)return a;switch(i=0,a&&(e=[2&e[0],a.value]),e[0]){case 0:case 1:a=e;break;case 4:return u.label++,{value:e[1],done:!1};case 5:u.label++,i=e[1],e=[0];continue;case 7:e=u.ops.pop(),u.trys.pop();continue;default:if(!(a=0<(a=u.trys).length&&a[a.length-1])&&(6===e[0]||2===e[0])){u=0;continue}if(3===e[0]&&(!a||e[1]>a[0]&&e[1]<a[3])){u.label=e[1];break}if(6===e[0]&&u.label<a[1]){u.label=a[1],a=e;break}if(a&&u.label<a[2]){u.label=a[2],u.ops.push(e);break}a[2]&&u.ops.pop(),u.trys.pop();continue}e=r.call(o,u)}catch(t){e=[6,t],i=0}finally{s=a=0}if(5&e[0])throw e[1];return{value:e[0]?e[1]:void 0,done:!0}}([t,e])}}}var r=function(){function a(){this.MAX_RADIUS=1e5,this.ELEMENT_INITIALIZATION_DELAY=2e3,this.onSelect=new n.EventEmitter,this.options={},this.DEFAULT_KEY_MAPPING={formatted_address:"vicinity",street:"street",street_number:"number",sublocality_level_1:"neighbourhood",administrative_area_level_2:"city",postal_code:"postalCode",administrative_area_level_1:"state",country:"country"}}return a.prototype.ngOnInit=function(){var o=this;setTimeout(function(){var e=o.uniqueId,t=document.querySelector("[ngx-address-autocomplete="+e+"]");t||console.warn(a.name+": Whoops! We were unable to find any divs with the id provided :(");var n=t&&"INPUT"==t.nodeName?t:document.querySelector("[ngx-address-autocomplete="+e+"] input");n||console.warn(a.name+": Whoops! Be sure to add the directive only to inputs or divs with input children )"),o.generateAutocompleteInput(n)},this.ELEMENT_INITIALIZATION_DELAY)},a.prototype.generateAutocompleteInput=function(i){return o(this,void 0,void 0,function(){var t,n,o,r,s=this;return u(this,function(e){switch(e.label){case 0:return e.trys.push([0,2,3,4]),[4,this.getUserLocation()];case 1:return t=e.sent(),[3,4];case 2:return n=e.sent(),console.warn(n),[3,4];case 3:return t&&(o=new google.maps.places.Autocomplete(i,this.options),r=new google.maps.Circle({center:t,radius:this.options.radius||this.MAX_RADIUS}),o.setBounds(r.getBounds()),o.addListener("place_changed",function(){var e=o.getPlace(),t=s.parseAddress(e);s.onSelect.emit({place:e,address:t})})),[7];case 4:return[2]}})})},a.prototype.getUserLocation=function(){return o(this,void 0,void 0,function(){var o=this;return u(this,function(e){return[2,new Promise(function(t,n){window.navigator.geolocation.getCurrentPosition(function(e){t(o.getLatLngFrom(e))},function(e){n(e)})})]})})},a.prototype.getLatLngFrom=function(e){return"undefined"!=typeof google?new google.maps.LatLng(e.coords.latitude,e.coords.longitude):this.createFallbackCoordinates(e)},a.prototype.createFallbackCoordinates=function(e){return e.lat=function(){return this.coords.latitude},e.lng=function(){return this.coords.longitude},e},a.prototype.getAddressElement=function(e,t){var n;return e.map(function(e){e.types&&e.types.indexOf&&-1<e.types.indexOf(t)&&(n=e.short_name||e.long_name)}),n},a.prototype.getPlaceLatLng=function(e){return{lng:e.geometry.location.lng(),lat:e.geometry.location.lat()}},a.prototype.getAddressFromPlace=function(e,t){if(!e||!e.geometry)return console.warn(a.name+": Whoops! It looks like the geometry property is missing from this place."),!1;for(var n={},o=t||this.DEFAULT_KEY_MAPPING,r=0;r<e.address_components.length;r++){var s=e.address_components[r].types[0];if(o[s]){var i=e.address_components[r].long_name;n[o[s]]=i}}return n.vicinity=e.formatted_address,n},a.prototype.parseAddress=function(e){if(!e)return{};var t=e.address_components,n={};return n.streetNumber=this.getAddressElement(t,"street_number"),n.location=this.getPlaceLatLng(e),n.street=this.getAddressElement(t,"route"),n.number=this.getAddressElement(t,"street_number"),n.neighbourhood=this.getAddressElement(t,"sublocality"),n.city=this.getAddressElement(t,"administrative_area_level_2"),n.state=this.getAddressElement(t,"administrative_area_level_1"),n.country=this.getAddressElement(t,"country"),n.postalCode=this.getAddressElement(t,"postal_code"),n.streetNumber&&(n.street=n.street+", "+n.streetNumber),n},a.decorators=[{type:n.Directive,args:[{selector:"[ngx-address-autocomplete]"}]}],a.ctorParameters=function(){return[]},a.propDecorators={uniqueId:[{type:n.Input,args:["ngx-address-autocomplete"]}],onSelect:[{type:n.Output}],options:[{type:n.Input,args:["options"]}]},a}(),s=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{imports:[t.CommonModule],declarations:[r],exports:[r]}]}],e}();e.NgxAddressAutocompleteModule=s,e.Éµa=r,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-dynamic-mask.umd.min.js.map